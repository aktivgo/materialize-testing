version: '3.8'

services:
  materialized:
    image: materialize/materialized
    container_name: materialized
    hostname: materialized
    command:
      - --workers
      - "1"
    ports:
      - 6875:6875
    volumes:
      - "./mzdata:/mzdata"
    depends_on:
      redpanda: { condition: service_healthy }
      schema-registry: { condition: service_healthy }
    healthcheck: { test: curl -f localhost:6875, interval: 1s, start_period: 30s }

  cli:
    image: materialize/cli:v0.26.4

  redpanda:
    image: docker.redpanda.com/vectorized/redpanda:latest
    container_name: redpanda
    hostname: redpanda
    command:
      - redpanda
      - start
      - --smp
      - '1'
      - --reserve-memory
      - 0M
      - --overprovisioned
      - --node-id
      - '0'
      - --kafka-addr
      - PLAINTEXT://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      - --advertise-kafka-addr
      - PLAINTEXT://redpanda:29092,OUTSIDE://localhost:9092
      - --pandaproxy-addr
      - PLAINTEXT://0.0.0.0:28082,OUTSIDE://0.0.0.0:8082
      - --advertise-pandaproxy-addr
      - PLAINTEXT://redpanda:28082,OUTSIDE://localhost:8082
      - --set
      - redpanda.enable_transactions=true
      - --set
      - redpanda.enable_idempotence=true
    volumes:
      - "./rpkdata:/var/lib/redpanda/data"
    ports:
      - 8081:8081
      - 8082:8082
      - 9092:9092
      - 28082:28082
      - 29092:29092
    healthcheck: { test: curl -f localhost:9644/v1/status/ready, interval: 1s, start_period: 30s }


  schema-registry:
    image: confluentinc/cp-schema-registry:7.2.0
    init: true
    hostname: schema-registry
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS=redpanda:29092
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8085,http://localhost:8085
    ports:
      - 8085:8085
    healthcheck: { test: curl -f localhost:8085, interval: 1s, start_period: 120s }